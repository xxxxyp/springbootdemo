ThreadLocal基本知识。

    ThreadLocal一般称为线程本地变量，它是一种特殊的线程绑定机制，将变量与线程绑定在一起，
    为每一个线程维护一个独立的变量副本。通过ThreadLocal可以将对象的可见范围限制在同一个线程内。

    需要重点强调的的是，不要拿ThreadLocal和synchronized做类比，
    因为这种比较压根就是无意义的！sysnchronized是一种互斥同步机制，
    是为了保证在多线程环境下对于共享资源的正确访问。而ThreadLocal从本质上讲，
    无非是提供了一个“线程级”的变量作用域，它是一种线程封闭（每个线程独享变量）技术，
    更直白点讲，ThreadLocal可以理解为将对象的作用范围限制在一个线程上下文中，
    使得变量的作用域为“线程级”。

    没有ThreadLocal的时候，一个线程在其声明周期内，可能穿过多个层级，
    多个方法，如果有个对象需要在此线程周期内多次调用，且是跨层级的（线程内共享），
    通常的做法是通过参数进行传递；而ThreadLocal将变量绑定在线程上，在一个线程周期内，
    无论“你身处何地”，只需通过其提供的get方法就可轻松获取到对象。
    极大地提高了对于“线程级变量”的访问便利性。